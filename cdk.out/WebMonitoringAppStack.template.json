{
 "Resources": {
  "LambdaArtifactBucketA657EC5C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "lambda-artifact-bucket-471112667717-ap-southeast-2"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/LambdaArtifactBucket/Resource"
   }
  },
  "AlarmNotificationsTableF1BA5487": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "AlarmName",
      "AttributeType": "S"
     },
     {
      "AttributeName": "Timestamp",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "AlarmName",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "Timestamp",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/AlarmNotificationsTable/Resource"
   }
  },
  "LambdaRole3A44B857": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/LambdaRole/Resource"
   }
  },
  "LambdaRoleDefaultPolicy75625A82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:PutItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AlarmNotificationsTableF1BA5487",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "LambdaArtifactBucketA657EC5C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaArtifactBucketA657EC5C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AlarmNotificationsTableF1BA5487",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaRoleDefaultPolicy75625A82",
    "Roles": [
     {
      "Ref": "LambdaRole3A44B857"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/LambdaRole/DefaultPolicy/Resource"
   }
  },
  "MyLayer38944FA5": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "nodejs20.x"
    ],
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-471112667717-ap-southeast-2",
     "S3Key": "37f345dcf6e0072ebf98a493cd85b44174f4e3edce5ec397b2e2e5d0f975495a.zip"
    },
    "Description": "A layer to include the AWS SDK"
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/MyLayer/Resource",
    "aws:asset:path": "asset.37f345dcf6e0072ebf98a493cd85b44174f4e3edce5ec397b2e2e5d0f975495a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "WebMetricsLambdaE9392478": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-471112667717-ap-southeast-2",
     "S3Key": "a9097f2f94c45bc31af76438c15aab1c1b6f276476694e798a75f61d7b91bc52.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "LambdaArtifactBucketA657EC5C"
      },
      "URLS": "https://www.google.com,https://swinburne.instructure.com/,https://example.com/404,https://httpstat.us/200?sleep=10000",
      "DYNAMODB_TABLE_NAME": {
       "Ref": "AlarmNotificationsTableF1BA5487"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "MyLayer38944FA5"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "LambdaRole3A44B857",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaRoleDefaultPolicy75625A82",
    "LambdaRole3A44B857"
   ],
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/WebMetricsLambda/Resource",
    "aws:asset:path": "asset.a9097f2f94c45bc31af76438c15aab1c1b6f276476694e798a75f61d7b91bc52",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AlarmTopicD01E77F9": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "Web Monitoring Alarm Topic"
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/AlarmTopic/Resource"
   }
  },
  "AlarmTopicqkrdbals0icloudcom3CC3A7FD": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": "qkrdbals0@icloud.com",
    "Protocol": "email",
    "TopicArn": {
     "Ref": "AlarmTopicD01E77F9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/AlarmTopic/qkrdbals0@icloud.com/Resource"
   }
  },
  "AvailabilityAlarmE6EBAA96": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "AlarmTopicD01E77F9"
     }
    ],
    "AlarmDescription": "Alarm when availability is less than 90%",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "Availability",
    "Namespace": "WebMonitoring",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 90
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/AvailabilityAlarm/Resource"
   }
  },
  "LatencyAlarm5394FC57": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "AlarmTopicD01E77F9"
     }
    ],
    "AlarmDescription": "Alarm when latency exceeds 3 seconds",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "Latency",
    "Namespace": "WebMonitoring",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 3000
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/LatencyAlarm/Resource"
   }
  },
  "LambdaPeriodicTrigger919C0107": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(5 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "WebMetricsLambdaE9392478",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/LambdaPeriodicTrigger/Resource"
   }
  },
  "LambdaPeriodicTriggerAllowEventRuleWebMonitoringAppStackWebMetricsLambdaF56F099378E0F56D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WebMetricsLambdaE9392478",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "LambdaPeriodicTrigger919C0107",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/LambdaPeriodicTrigger/AllowEventRuleWebMonitoringAppStackWebMetricsLambdaF56F0993"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQy04DMQz8Fu7ZUFrg3iJx4lBtEdfKm5iSbh5VnLRaRfl3kuwildPMeMaO4zV/en7lqwe4USfk2Gk18HQIIEZWSsdEG552UYwY2Nu3XdgMOyDMTE4WjJOl6xMGjTXVSGYKDE+9m2sN904rMVU5s8w0mEECTx8wof9CT8rZ6v/T79GKsBj3fI/eKKqRzGhzBCIMxLcVGFkqG7mLEm2jRg5xIOHV5a//XmcmtIvyBkH88LTV4E2NNJIZXtGW0amPy28K5sx6JBe9QNbeLFc7KXtq/mJkZp1EfqbH63rFX8qdz6RU56MNyiDvZ/wF63rEBoQBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebMonitoringAppStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}